# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  web-test:
    docker:
      - image: circleci/node

    working_directory: ~/repo/web

    steps:
      - checkout:
          path: ~/repo

      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "yarn.lock" }}
            - yarn-packages-

      - run:
          name: Install node-gyp
          command: yarn global add node-gyp

      - run:
          name: Install dependencies
          command: yarn install --frozen -lockfile

      - save_cache:
          name: Save yarn package cache
          key: yarn-packages-{{ checksum "yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run:
          name: Run tests with JUnit as reporter
          command: yarn run junit
          environment:
            JEST_JUNIT_OUTPUT: "reports/junit/js-test-results.xml"

      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  core-test:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:11-jdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      MAVEN_OPTS: -Xmx3200m

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
            - maven-{{ checksum "pom.xml" }}
            - maven-
      - restore_cache:
          keys:
            - yarn-packages-{{ checksum "web/yarn.lock" }}
            - yarn-packages-

      - run: mvn dependency:go-offline -pl core

      - save_cache:
          key: maven-{{ checksum "core/pom.xml" }}
          paths:
            - ~/.m2
      - save_cache:
          name: Save yarn package cache
          key: yarn-packages-{{ checksum "web/yarn.lock" }}
          paths:
            - ~/.cache/yarn

      - run: mvn test -pl core
      - store_artifacts:
          path:  target
      - codecov/upload:
          file: target/my-reports/jacoco.xml
      - run:
          name: Save test results
          command: |
            mkdir -p reports/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} reports/junit/ \;
          when: always
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  deploy:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: |
            chmod +x .circleci/setup-heroku.sh
            .circleci/setup-heroku.sh $HEROKU_APP $HEROKU_LOGIN $HEROKU_API_KEY
      - run:
          name: Deploy master to Heroku
          command: |
            git push heroku master

workflows:
  version: 2
  build:
    jobs:
      - web-test
      - core-test
      - deploy:
          requires:
            - web-test
            - core-test
          filters:
            branches:
              only: master