# Java Maven CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2.1
orbs:
  codecov: codecov/codecov@1.0.2

jobs:
  test:
    docker:
      - image: circleci/openjdk:11-jdk

    environment:
      MAVEN_OPTS: -Xmx3200m

    working_directory: ~/repo

    steps:
      - checkout:
          path: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
            - maven-{{ checksum "pom.xml" }}
            - maven-

      - run: mvn package dependency:go-offline -DskipTests

      - save_cache:
          key: maven-{{ checksum "pom.xml" }}
          paths:
            - ~/.m2

      - run: mvn test
      - store_artifacts:
          path:  dist/target

      - codecov/upload:
          file: core/target/my-reports/jacoco.xml
      - codecov/upload:
          file: database/target/my-reports/jacoco.xml
      - codecov/upload:
          file: web/target/my-reports/jacoco.xml

      - run:
          name: Save test results
          command: |
            mkdir -p reports/junit/
            find . -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} reports/junit/ \;
          when: always
      - store_test_results:
          path: reports/junit
      - store_artifacts:
          path: reports/junit

  deploy:
    docker:
      - image: circleci/openjdk:11-jdk
    steps:
      - checkout
      - run:
          name: Setup Heroku
          command: |
            chmod +x .circleci/setup-heroku.sh
            .circleci/setup-heroku.sh $HEROKU_APP $HEROKU_LOGIN $HEROKU_API_KEY
      - run:
          name: Create new release
          command: |
            # assemble current and new version numbers
            OLD_VERSION=$(mvn -s .circleci/settings.xml -q \
              -Dexec.executable="echo" -Dexec.args='${project.version}' \
              --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)
            NEW_VERSION="${OLD_VERSION/-SNAPSHOT/}"
            echo "Releasing $OLD_VERSION as $NEW_VERSION"

            # ensure dependencies use release versions
            mvn -s .circleci/settings.xml versions:use-releases

            # write release version to POM
            mvn -s .circleci/settings.xml versions:set -DnewVersion="$NEW_VERSION" -DprocessAllModules

            # setup git
            git config user.name "CircleCI"
            git config user.email "builds@doesnotexist.reciplease.org"

            # commit and tag
            git add pom.xml
            git add **/pom.xml
            git commit -m "[skip ci] Releasing: $NEW_VERSION"
            git tag "$NEW_VERSION"

            # publish
            git push
            git push --tags
      - run:
          name: Deploy master to Heroku
          command: |
            git push heroku master
      - run:
          name: Prepare for next cycle
          command: |
            NEW_VERSION=$(mvn -s .circleci/settings.xml -q \
              -Dexec.executable="echo" -Dexec.args='${project.version}' \
              --non-recursive org.codehaus.mojo:exec-maven-plugin:1.3.1:exec)

            # increment minor version number
            MAJ_VERSION=$(echo "$NEW_VERSION" | cut -d '.' -f 1)
            MIN_VERSION=$(echo "$NEW_VERSION" | cut -d '.' -f 2)
            PATCH_VERSION=$(echo "$NEW_VERSION" | cut -d '.' -f 3)

            NEW_PATCH=$((PATCH_VERSION + 1))
            DEV_VERSION="${MAJ_VERSION}.${MIN_VERSION}.${NEW_PATCH}-SNAPSHOT"

            # ready for development
            mvn -s .circleci/settings.xml versions:set -DnewVersion="$DEV_VERSION" -DprocessAllModules

            git add pom.xml
            git add **/pom.xml

            git commit -m "[skip ci] Preparing for development: $DEV_VERSION"
            git push

workflows:
  version: 2
  build:
    jobs:
      - test
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master